@page "/account/recovery"
@layout EmptyLayout
@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authStateProvider
@inject IAuthenticationService _authService


<div class="bg-image">
    @if (IsSuccess)
    {
        <div class="position-absolute top-50 start-50 translate-middle" style="background-color: whitesmoke">
            <h1 class="text-success text-center">Password Changed!</h1>
            <p class="text-center">You can close this tab and login with new password.</p>
        </div>
    }
    else
    {
        <div class="position-absolute top-50 start-50 translate-middle">
            <EditForm Model="ResetPasswordDTO" OnValidSubmit="TryResetPassword">
                <DataAnnotationsValidator></DataAnnotationsValidator>

                <div class="d-flex flex-column rounded p-2" style="background-color: whitesmoke">
                    <img src="/img/illuminati.png" class="align-self-center" width="64" height="64">
                    <h5 class="text-center">Enter new password:</h5>
                    <div class="py-2">
                        <InputText @bind-Value="ResetPasswordDTO.Password" type="password" placeholder="Password..." class="form-control" />
                        <ValidationMessage For="(() => ResetPasswordDTO.Password)" />
                    </div>
                    <div class="py-2">
                        <InputText @bind-Value="ResetPasswordDTO.ConfirmPassword" type="password" class="form-control" placeholder="Confirm Password..." />
                        <ValidationMessage For="(() => ResetPasswordDTO.ConfirmPassword)" />
                    </div>

                    @if (IsShowErrors)
                    {
                        <p class="text-danger">@Errors</p>
                    }

                    @if (IsProcessing)
                    {
                        <button type="submit" class="btn btn-outline-dark" disabled>Reset</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-outline-dark">Reset</button>
                    }
                </div>
            </EditForm>
        </div>
    }
</div>


@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "email")]
    public string Email { get; set; }

    private ResetPasswordDTO ResetPasswordDTO { get; set; } = new();
    public bool IsProcessing { get; set; } = false;
    public bool IsSuccess { get; set; } = false;
    public bool IsShowErrors { get; set; } = false;
    public string Errors { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var query = new Uri(_navigationManager.Uri).Query;
        string token = query.Split("&email")[0].Split('=')[1];
        var authState = await _authStateProvider.GetAuthenticationStateAsync();
        if (string.IsNullOrEmpty(Email) || string.IsNullOrEmpty(token) || authState.User.Identity!.IsAuthenticated)
        {
            _navigationManager.NavigateTo("/");
        }
        else
        {
            ResetPasswordDTO.Email = Email;
            ResetPasswordDTO.Token = token;
        }
    }

    private async Task TryResetPassword()
    {
        IsShowErrors = false;
        IsProcessing = true;

        var result = await _authService.ResetUserPassword(ResetPasswordDTO);
        if (!result.IsSuccess)
        {
            Errors = result.Errors;
            IsShowErrors = true;
        }
        else
        {
            IsSuccess = true;
            StateHasChanged();
        }
        IsProcessing = false;
    }
}
